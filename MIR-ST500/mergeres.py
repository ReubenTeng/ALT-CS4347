import math
import os
from pydub import AudioSegment
from decimal import Decimal

def merge_one_song_res(orig_audio_path, res_folder, dest_folder):
    chunk_size = 35000 # 35s
    old_wav = AudioSegment.from_wav(orig_audio_path)
    num_of_splits = math.ceil(len(old_wav) / chunk_size) 
    source_file_name = os.path.basename(orig_audio_path).split('.')[0]

    merged_res_file_path = os.path.join(dest_folder, source_file_name + ".txt")
    merged_file = open(merged_res_file_path, "w")
    merged_file.write("") # empty file
    merged_file.close()

    merged_file = open(merged_res_file_path, "a")
    for i in range(num_of_splits):
        split_res_file_path = os.path.join(res_folder, source_file_name + "_" + str(i) + ".txt")
        split_file = open(split_res_file_path, "r")
        time_offset = Decimal(i * 35) # in seconds

        for line in split_file:
            if not line.isspace():
                split_line = line.split("\t", 3)
                onset = split_line[0]
                offset = split_line[1]
                img_height = split_line[2]

                onset = str(Decimal(onset) + time_offset)
                offset = str(Decimal(offset) + time_offset)

                merged_file.write(onset + "\t" + offset + "\t" + img_height)
        split_file.close()
    merged_file.close()

if __name__=='__main__':
    vox_dir = sys.argv[1] # original vocal file
    save_dir = sys.argv[2]
    split_res_dir = os.path.join(save_dir, "res") # generated by predict
    merged_res_dir = sys.argv[3]

    for vox_wav in os.listdir(vox_dir):
        merge_one_song_res(os.path.join(vox_dir, vox_wav), split_res_dir, merged_res_dir)